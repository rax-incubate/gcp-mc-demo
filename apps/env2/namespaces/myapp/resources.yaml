apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: "myapp"
  name: myapp
  labels: 
    image_version: "1.8"
    deploy_version: "1.8"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: myapp
        image: "us-east1-docker.pkg.dev/gcp-mc-demo-prime/myapp/myapp:1.11"
        ports:
        - containerPort: 8080
        env:
        - name: CONTAINER_PORT
          value: "8080"
        - name: ENV
          value: "env2-aws"
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: myapp-credentials
              key: db_host
        - name: DB_HOST_PORT
          valueFrom:
            secretKeyRef:
              name: myapp-credentials
              key: db_host_port
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: myapp-credentials
              key: db_name
        - name: DB_TABLE
          valueFrom:
            secretKeyRef:
              name: myapp-credentials
              key: db_table
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: myapp-credentials
              key: db_user
        - name: DB_PWD
          valueFrom:
            secretKeyRef:
              name: myapp-credentials
              key: db_password
      imagePullSecrets:
      - name: registry-secret
---
apiVersion: "autoscaling/v1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "myapp-hpa"
  labels:
    app: "myapp"
spec:
  scaleTargetRef:
    kind: "Deployment"
    name: "myapp"
    apiVersion: "apps/v1beta1"
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
---
apiVersion: v1
kind: Service
metadata:
  name: myapp
spec:
  type: LoadBalancer
  selector:
    app: myapp
  ports:
  - name: http
    port: 80
    targetPort: 8080
